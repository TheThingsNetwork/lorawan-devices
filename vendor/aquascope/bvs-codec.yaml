# Uplink decoder decodes binary data uplink into a JSON object (optional)
# For documentation on writing encoders and decoders, see: https://thethingsstack.io/integrations/payload-formatters/javascript/
uplinkDecoder:
  fileName: bvs.js
  # Examples (optional)
  examples:
    - description: Valve Open
      input:
        fPort: 10
        bytes: [32, 0, 0, 0]
      output:
        data:
          leak: N
          temperature: 0
          valve: On
    - description: Valve Closed
      input:
        fPort: 10
        bytes: [64, 0, 0, 0]
      output:
        data:
          leak: N
          temperature: 0
          valve: Off
    - description: Unknown FPort
      input:
        fPort: 42
        bytes: [1, 42]
      output:
        errors:
          - unknown FPort

# Downlink encoder encodes JSON object into a binary data downlink (optional)
downlinkEncoder:
  fileName: bvs.js
  examples:
    - description: Turn on
      input:
        data:
          valve: On
      output:
        bytes: [2, 255]
        fPort: 10
    - description: Turn off
      input:
        data:
          valve: Off
      output:
        bytes: [2, 0]
        fPort: 10

# Downlink decoder decodes the encoded downlink message (optional, must be symmetric with downlinkEncoder)
downlinkDecoder:
  fileName: bvs.js
  examples:
    - description: Turn on
      input:
        fPort: 10
        bytes: [2, 255]
      output:
        data:
          valve: On
    - description: Turn off
      input:
        fPort: 10
        bytes: [2, 0]
      output:
        data:
          valve: Off
