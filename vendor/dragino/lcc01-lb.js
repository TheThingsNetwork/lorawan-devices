function decodeUplink(input) {\n return { \n data: Decode(input.fPort, input.bytes, input.variables)\n }; \n}\nfunction Decode(fPort, bytes, variables) {\n// Decode an uplink message from a buffer\n// (array) of bytes to an object of fields.\n var i;\n var batV=0;//Battery,units:V\n var mod = 0;\n var Firmware = 0; // Firmware version; 5 bits \n var sub_band;\n var freq_band;\n var sensor; \n var firm_ver; \n var weight_g;\n var weight_state;\n var weight_reading;\n var scale_factor;\n var weight_flag;\n if(fPort==0x02)\n {\n batV= (bytes[0]<<8 | bytes[1])/1000;\n mod = bytes[2] ;\n weight_reading = (bytes[3]<<16 | bytes[4]<<8| bytes[5]);\n weight_state = bytes[6];\n scale_factor = bytes[7]<<8| bytes[8];\n weight_flag = bytes[9];\n weight_g = weight_reading*scale_factor;\n if(mod == 1)\n {\n return {\n battery:batV,\n actual_weight_g:weight_g,\n weight_reading:weight_reading,\n weight_state:weight_state,\n scale_factor:scale_factor,\n mod:mod,\n }; \n }\n if(mod == 2)\n {\n return {\n battery:batV,\n actual_weight_g:weight_g,\n weight_reading:weight_reading,\n weight_state:weight_state,\n scale_factor:scale_factor,\n mod:mod,\n weight_flag:weight_flag,\n }; \n }\n \n }\n \n if(fPort==0x05)\n {\n if(bytes[0]==0x32)\n sensor_mode=\"LCC\";\n else\n sensor_mode=\"NULL\"; \n \n if(bytes[4]==0xff)\n sub_band=\"NULL\";\n else\n sub_band=bytes[4];\n \n if(bytes[3]==0x01)\n freq_band=\"EU868\";\n else if(bytes[3]==0x02)\n freq_band=\"US915\";\n else if(bytes[3]==0x03)\n freq_band=\"IN865\";\n else if(bytes[3]==0x04)\n freq_band=\"AU915\";\n else if(bytes[3]==0x05)\n freq_band=\"KZ865\";\n else if(bytes[3]==0x06)\n freq_band=\"RU864\";\n else if(bytes[3]==0x07)\n freq_band=\"AS923\";\n else if(bytes[3]==0x08)\n freq_band=\"AS923_1\";\n else if(bytes[3]==0x09)\n freq_band=\"AS923_2\";\n else if(bytes[3]==0x0A)\n freq_band=\"AS923_3\";\n else if(bytes[3]==0x0B)\n freq_band=\"CN470\";\n else if(bytes[3]==0x0C)\n freq_band=\"EU433\";\n else if(bytes[3]==0x0D)\n freq_band=\"KR920\";\n else if(bytes[3]==0x0E)\n freq_band=\"MA869\";\n \n firm_ver= (bytes[1]&0x0f)+'.'+(bytes[2]>>4&0x0f)+'.'+(bytes[2]&0x0f);\n batV= (bytes[5]<<8 | bytes[6])/1000;\n \n return {\n battery:batV,\n SENSOR_MODEL:sensor_mode,\n FIRMWARE_VERSION:firm_ver,\n FREQUENCY_BAND:freq_band,\n SUB_BAND:sub_band, \n SMODE:sensor,\n };\n } \n}