function decodeUplink(input) {\n return { \n data: Decode(input.fPort, input.bytes, input.variables)\n }; \n}\nfunction datalog(i,bytes){\n var aa= (bytes[0+i]<<8 | bytes[1+i])/10;\n var bb= (bytes[2+i]<<8 | bytes[3+i])/10;\n var cc= (bytes[4+i]<<8 | bytes[5+i])/10; \n var dd= (bytes[6+i]) ;\n var ee= getMyDate((bytes[7+i]<<24 | bytes[8+i]<<16 | bytes[9+i]<<8 | bytes[10+i]).toString(10));\n var string='['+'PH'+':'+aa+','+'Temperature'+':'+bb+','+'DS18B20_Temperature'+':'+cc+','+'s_flag'+':'+dd+','+'time '+':'+ee+']'+','; \n \n return string;\n}\n\nfunction getzf(c_num){ \n if(parseInt(c_num) < 10)\n c_num = '0' + c_num; \n\n return c_num; \n}\n\nfunction getMyDate(str){ \n var c_Date;\n if(str > 9999999999)\n c_Date = new Date(parseInt(str));\n else \n c_Date = new Date(parseInt(str) * 1000);\n \n var c_Year = c_Date.getFullYear(), \n c_Month = c_Date.getMonth()+1, \n c_Day = c_Date.getDate(),\n c_Hour = c_Date.getHours(), \n c_Min = c_Date.getMinutes(), \n c_Sen = c_Date.getSeconds();\n var c_Time = c_Year +'-'+ getzf(c_Month) +'-'+ getzf(c_Day) +' '+ getzf(c_Hour) +':'+ getzf(c_Min) +':'+getzf(c_Sen); \n \n return c_Time;\n}\n\nfunction Decode(fPort, bytes, variables) {\n if(fPort==0x02)\n {\n var value=(bytes[0]<<8 | bytes[1]) & 0x3FFF;\n var batV=value/1000;//Battery,units:V\n\n value=bytes[2]<<8 | bytes[3];\n if(bytes[2] & 0x80)\n {value |= 0xFFFF0000;}\n var temp_DS18B20=(value/10).toFixed(2);//DS18B20,temperature\n \n value=bytes[4]<<8 | bytes[5];\n var PH1=(value/100).toFixed(2); \n \n value=bytes[6]<<8 | bytes[7];\n var temp=0; \n if((value & 0x8000)>>15 === 0)\n temp=(value/10).toFixed(2);//temp_SOIL,temperature\n else if((value & 0x8000)>>15 === 1)\n temp=((value-0xFFFF)/10).toFixed(2); \n \n var i_flag = bytes[8];\n var mes_type = bytes[10];\n \n if(bytes.length==11)\n return {\n battery:batV,\n temperature_pro:temp_DS18B20,\n ph1_soil:PH1,\n temp_soil:temp,\n interrupt_flag:i_flag,\n message_type:mes_type\n };\n }\nelse if(fPort==0x03) \n {\n \n for(var i=0;i<bytes.length;i=i+11)\n {\n var data= datalog(i,bytes);\n if(i=='0')\n data_sum=data;\n else\n data_sum+=data;\n }\n return{\n DATALOG:data_sum,\n \n }; \n } \n else if(fPort==0x05)\n {\n var sub_band;\n var freq_band;\n var sensor;\n \n if(bytes[0]==0x2C)\n sensor= \"SPH01-LB\";\n \n if(bytes[4]==0xff)\n sub_band=\"NULL\";\n else\n sub_band=bytes[4];\n \n if(bytes[3]==0x01)\n freq_band=\"EU868\";\n else if(bytes[3]==0x02)\n freq_band=\"US915\";\n else if(bytes[3]==0x03)\n freq_band=\"IN865\";\n else if(bytes[3]==0x04)\n freq_band=\"AU915\";\n else if(bytes[3]==0x05)\n freq_band=\"KZ865\";\n else if(bytes[3]==0x06)\n freq_band=\"RU864\";\n else if(bytes[3]==0x07)\n freq_band=\"AS923\";\n else if(bytes[3]==0x08)\n freq_band=\"AS923_1\";\n else if(bytes[3]==0x09)\n freq_band=\"AS923_2\";\n else if(bytes[3]==0x0A)\n freq_band=\"AS923_3\";\n else if(bytes[3]==0x0B)\n freq_band=\"CN470\";\n else if(bytes[3]==0x0C)\n freq_band=\"EU433\";\n else if(bytes[3]==0x0D)\n freq_band=\"KR920\";\n else if(bytes[3]==0x0E)\n freq_band=\"MA869\";\n \n var firm_ver= (bytes[1]&0x0f)+'.'+(bytes[2]>>4&0x0f)+'.'+(bytes[2]&0x0f);\n var bat= (bytes[5]<<8 | bytes[6])/1000;\n \n return {\n SENSOR_MODEL:sensor,\n FIRMWARE_VERSION:firm_ver,\n FREQUENCY_BAND:freq_band,\n SUB_BAND:sub_band,\n battery:bat,\n };\n }\n}\n