# Uplink decoder decodes binary data uplink into a JSON object (optional)
# For documentation on writing encoders and decoders, see: https://thethingsstack.io/integrations/payload-formatters/javascript/
uplinkDecoder:
  fileName: pulse-senso-sensor.js
  # Examples (optional)
  # examples:
  # - description: Time-stamped batch report on impulse
  #   input:
  #     fPort: 125
  #     bytes: [0x22, 0x35, 0x00, 0x02, 0x9F, 0x61, 0x03, 0xF6, 0x00, 0x00, 0x00, 0x00, 0x51, 0xD0, 0xBE, 0x5E, 0xAF, 0xD7, 0x27, 0x49, 0x02, 0x49, 0x92, 0x1B]
  #   output:
  #     data:
  #       data :
  #         - date: '2021-06-04T12:28:25.300Z'
  #           label: Index1
  #           value: 0
  #         - date: '2021-06-04T12:29:25.300Z'
  #           label: Index1
  #           value: 0
  #         - date: '2021-06-04T12:30:25.300Z'
  #           label: Index1
  #           value: 0
  #         - date: '2021-06-04T12:31:25.300Z'
  #           label: Index1
  #           value: 0
  #         - date: '2021-06-04T12:32:25.300Z'
  #           label: Index1
  #           value: 0
  #         - date: '2021-06-04T12:33:25.300Z'
  #           label: State1
  #           value: 1
  #         - date: '2021-06-04T12:34:25.300Z'
  #           label: State1
  #           value: 1
  #         - date: '2021-06-04T12:35:25.300Z'
  #           label: State1
  #           value: 1
  #         - date: '2021-06-04T12:36:25.300Z'
  #           label: State1
  #           value: 1
  #         - date: '2021-06-04T12:37:25.300Z'
  #           label: State1
  #           value: 1
  #       zclheader:
  #         report : batch
  #     errors : []
  #     warnings : []

  # - description: Time-stamped standard report on impulse
  #   input:
  #     fPort: 125
  #     bytes: [0x11, 0x0A, 0x0F, 0x04, 0x02, 0x23, 0x00, 0x00, 0x00, 0x00]
  #   output:
  #     data:
  #       data:
  #         - date : '2021-06-04T12:39:48.333Z'
  #           label: Index1
  #           value: 0
  #       zclheader:
  #         alarm : 0
  #         attributID : "0x0402"
  #         clusterdID : "0x000F"
  #         cmdID : "0x0A"
  #         endpoint : 0
  #         report : standard
  #     errors : []
  #     warnings : []
  # - description: Time-stamped standard report on impulse
  #   input:
  #     fPort: 125
  #     bytes: [0x31, 0x0A, 0x00, 0x0F, 0x04, 0x02, 0x23, 0x00, 0x00, 0x00, 0x00]
  #   output:
  #     data:
  #       data:
  #         - date : '2021-06-04T12:39:48.333Z'
  #           label: Index2
  #           value: 0
  #       zclheader:
  #         alarm : 0
  #         attributID : "0x0402"
  #         clusterdID : "0x000F"
  #         cmdID : "0x0A"
  #         endpoint : 1
  #         report : standard
  #     errors : []
  #     warnings : []
  # - description: Time-stamped standard report on impulse
  #   input:
  #     fPort: 125
  #     bytes: [0x51, 0x0A, 0x00, 0x0F, 0x00, 0x55, 0x10, 0x01]
  #   output:
  #     data:
  #         data:
  #           - date : '2021-06-04T12:39:48.333Z'
  #             label: Index3
  #             value: 1
  #         zclheader:
  #           alarm : 0
  #           attributID : "0x0055"
  #           clusterdID : "0x000F"
  #           cmdID : "0x0A"
  #           endpoint : 2
  #           report : standard
  #     errors : []
  #     warnings : []

  # - description: Time-stamped standard report on impulse
  #   input:
  #     fPort: 125
  #     bytes: [0x11, 0x0A, 0x80, 0x05, 0x00, 0x00, 0x19, 0x00, 0x07]
  #   output:
  #     data:
  #         data:
  #           - date : '2021-06-04T12:39:48.333Z'
  #             label: State1
  #             value: 1
  #           - date : '2021-06-04T12:39:48.333Z'
  #             label: State2
  #             value: 1
  #           - date : '2021-06-04T12:39:48.333Z'
  #             label: State3
  #             value: 1
  #         zclheader:
  #           alarm : 0
  #           attributID : "0x0000"
  #           clusterdID : "0x8005"
  #           cmdID : "0x0A"
  #           endpoint : 0
  #           report : standard
  #     errors : []
  #     warnings : []
# # Downlink encoder encodes JSON object into a binary data downlink (optional)
# downlinkEncoder:
#   fileName: windsensor.js
#   examples:
#     - description: Turn green
#       input:
#         data:
#           led: green
#       output:
#         bytes: [1]
#         fPort: 2
#     - description: Invalid color
#       input:
#         data:
#           led: blue
#       output:
#         errors:
#           - invalid LED color

# # Downlink decoder decodes the encoded downlink message (optional, must be symmetric with downlinkEncoder)
# downlinkDecoder:
#   fileName: windsensor.js
#   examples:
#     - description: Turn green
#       input:
#         fPort: 2
#         bytes: [1]
#       output:
#         data:
#           led: green
