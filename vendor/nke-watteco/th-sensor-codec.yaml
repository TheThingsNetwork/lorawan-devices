# Uplink decoder decodes binary data uplink into a JSON object (optional)
# For documentation on writing encoders and decoders, see: https://thethingsstack.io/integrations/payload-formatters/javascript/
uplinkDecoder:
  fileName: th-sensor.js
  # Examples (optional)
  # examples:
  # - description: Time-stamped batch report on temperature and humidity
  #   input:
  #     fPort: 125
  #     bytes: [0x20, 0x15, 0x40, 0x82, 0x8B, 0xD6, 0x03, 0x68, 0x40, 0x9E, 0xE0, 0x12, 0x11, 0x54, 0xA7, 0x4E, 0x9D, 0x3A, 0x00, 0x8C]
  #   output:
  #     data:
  #       data :
  #         - date: '2021-06-01T09:50:00.073Z'
  #           label: temperature
  #           value: 25
  #         - date: '2021-06-01T09:50:00.073Z'
  #           label: humidity
  #           value: 40
  #         - date: '2021-06-01T09:51:00.073Z'
  #           label: humidity
  #           value: 40
  #         - date: '2021-06-01T09:52:00.073Z'
  #           label: humidity
  #           value: 40
  #         - date: '2021-06-01T09:53:00.073Z'
  #           label: humidity
  #           value: 40
  #         - date: '2021-06-01T09:54:00.073Z'
  #           label: humidity
  #           value: 40
  #       zclheader:
  #         report : batch
  #     errors : []
  #     warnings : []

  # - description: Unknown FPort
  #   input:
  #     fPort: 42
  #     bytes: [1, 42]
  # output:
  #   errors:
  #     - unknown FPort
  # - description: Time-stamped standard report on temperature
  #   input:
  #     fPort: 125
  #     bytes: [0x11, 0x8A, 0x04, 0x02, 0x00, 0x00, 0x29, 0x09, 0xC5]
  #   output:
  #     data:
  #         data:
  #           - date : '2021-06-01T09:50:00.073Z'
  #             label: temperature
  #             value: 25.01
  #         zclheader:
  #           alarm : 1
  #           attributID : "0x0000"
  #           clusterdID : "0x0402"
  #           cmdID : "0x8A"
  #           endpoint : 0
  #           report : standard
  #     errors : []
  #     warnings : []
  # - description: Time-stamped standard report on humidity
  #   input:
  #     fPort: 125
  #     bytes: [0x11, 0x0A, 0x04, 0x05, 0x00, 0x00, 0x21, 0x10, 0x8A]
  #   output:
  #     data:
  #         label: "humidity"
  #         value: 42.34
# # Downlink encoder encodes JSON object into a binary data downlink (optional)
# downlinkEncoder:
#   fileName: windsensor.js
#   examples:
#     - description: Turn green
#       input:
#         data:
#           led: green
#       output:
#         bytes: [1]
#         fPort: 2
#     - description: Invalid color
#       input:
#         data:
#           led: blue
#       output:
#         errors:
#           - invalid LED color

# # Downlink decoder decodes the encoded downlink message (optional, must be symmetric with downlinkEncoder)
# downlinkDecoder:
#   fileName: windsensor.js
#   examples:
#     - description: Turn green
#       input:
#         fPort: 2
#         bytes: [1]
#       output:
#         data:
#           led: green
