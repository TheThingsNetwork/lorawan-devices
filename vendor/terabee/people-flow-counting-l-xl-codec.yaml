# Uplink decoder decodes binary data uplink into a JSON object (optional)
# For documentation on writing encoders and decoders, see: https://thethingsstack.io/integrations/payload-formatters/javascript/
uplinkDecoder:
  fileName: people-flow-counting-l-xl.js
  # Examples (optional)
  examples:
    - description: Counting data uplink
      input:
        fPort: 1
        bytes: [0, 0, 0, 200, 0, 0, 1, 200, 0]
      output:
        data:
          count_in: 200
          count_out: 456
          flags: {}
    - description: Counting data uplink with specific flags
      input:
        fPort: 1
        bytes: [0, 0, 0, 0, 0, 0, 0, 0, 15]
      output:
        data:
          count_in: 0
          count_out: 0
          flags:
            TPC_STOPPED: 1
            TPC_STUCK: 1
            MULTI_DEV_ISSUE: 1
            WIFI_AP_ENABLED: 1
    - description: Access point state response
      input:
        fPort: 5
        bytes: [1, 0]
      output:
        data:
          cmd:
            name: 'CMD_GET_AP_STATE'
            id: 1
            success: true
            value:
              state: 'disabled'
    - description: Mounting height response
      input:
        fPort: 100
        bytes: [1, 5, 220]
      output:
        data:
          cmd:
            name: CMD_GET_HEIGHT
            id: 1
            success: true
            value:
              mounting_height: 1500
    - description: Push period get response
      input:
        fPort: 100
        bytes: [3, 0, 60]
      output:
        data:
          cmd:
            name: CMD_GET_PUSH_PERIOD
            id: 3
            success: true
            value:
              push_period_min: 60
    - description: Lora agent get version response
      input:
        fPort: 4
        bytes: [3, 2, 0, 1]
      output:
        data:
          cmd:
            name: CMD_GET_VER_LORA_AGENT
            id: 3
            success: true
            value:
              software_version: '2.0.1'
    - description: Get counting area points response
      input:
        fPort: 101
        bytes: [2, 0, 0, 0, 0]
      output:
        data:
          cmd:
            name: CMD_GET_AREA_PTS
            id: null
            success: true
            value:
              nb_of_points: 2
              points: [{ 'x': 0, 'y': 0 }, { 'x': 0, 'y': 0 }]
# Downlink encoder encodes JSON object into a binary data downlink (optional)

# Downlink decoder decodes the encoded downlink message (optional, must be symmetric with downlinkEncoder)
