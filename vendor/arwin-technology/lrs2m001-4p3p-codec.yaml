# Uplink decoder decodes binary data uplink into a JSON object (optional)
# For documentation on writing encoders and decoders, see: https://www.thethingsindustries.com/docs/integrations/payload-formatters/javascript/
uplinkDecoder:
  fileName: lrs2m001-4p3p.js
  examples:
    - description: Phase A 220V, Phase B 197.9V, Phase C 242.1V, Frequency 49.9Hz, Phase B under voltage, Phase C over voltage, Backup battery 80%
      input:
        fPort: 10
        bytes: [10, 8, 152, 7, 187, 9, 117, 78, 28, 25, 80]
      output:
        data:
          event: 'heartbeat/button,ph_C_over_V,ph_B_under_V'
          phase_A_V: 220
          phase_B_V: 197.9
          phase_C_V: 242.1
          freq: 49.99
          backup_batt: 80
    - description: Channel 1 Phase A heartbeat/button, 178.9A, Active Power 34438.3W, Power Factor 0.875, Active Energy 5678.9kWh
      input:
        fPort: 50
        bytes: [10, 134, 253, 21, 4, 255, 107, 0, 0, 221, 213]
      output:
        data:
          channel: 1
          phase: 'A'
          event: 'heartbeat/button'
          current: 178.9
          active_pow: 34438.3
          power_factor: 0.875
          active_energy: 5678.9
    - description: Channel 2 Phase C Over current, 620.5A, Active Power 135200.7W, Power Factor 0.9, Active Energy 2379645kWh
      input:
        fPort: 55
        bytes: [10, 216, 61, 82, 133, 31, 132, 1, 107, 26, 226]
      output:
        data:
          channel: 2
          phase: 'C'
          event: 'over_current,heartbeat/button'
          current: 620.5
          active_pow: 135200.7
          power_factor: 0.9
          active_energy: 2379645
    - description: Channel 3 Phase B Over current, 956.4A, Active Power 160880.8W, Power Factor 0.85, Active Energy 3765836.3
      input:
        fPort: 57
        bytes: [10, 229, 92, 98, 49, 163, 82, 2, 62, 158, 251]
      output:
        data:
          channel: 3
          phase: 'B'
          event: 'over_current,heartbeat/button'
          current: 956.4
          active_pow: 160880.8
          power_factor: 0.85
          active_energy: 3765836.3
    - description: Channel 4 Phase B Over current, 865.4A, Active Power 158418W, Power Factor 0.925, Active Energy 56789.2kWh
      input:
        fPort: 60
        bytes: [10, 225, 206, 96, 176, 211, 157, 0, 8, 170, 84]
      output:
        data:
          channel: 4
          phase: 'B'
          event: 'over_current,heartbeat/button'
          current: 865.4
          active_pow: 158418
          power_factor: 0.925
          active_energy: 56789.2
    - description: Firmware version 1.00.001
      input:
        fPort: 8
        bytes: [1, 0, 0, 1]
      output:
        data:
          firmwareVersion: '1.00.001'
    - description: Firmware version 1.00.001, Battery Level 3.55V, Battery Percentage 100%, Uplink Count 66051
      input:
        fPort: 9
        bytes: [1, 0, 0, 1, 13, 222, 100, 0, 1, 2, 3]
      output:
        data:
          firmwareVersion: '1.00.001'
          batteryLevel: 3550
          batteryPercentage: 100
          uplinkCount: 66051
    - description: Power meter settings, data upload interval = 15 min
      input:
        fPort: 16
        bytes: [10, 0, 15, 0, 205, 0, 235, 1, 244]
      output:
        data:
          dataUploadInterval: 15
          underVoltageLimit: 205
          overVoltageLimit: 235
          overCurrentLimit: 500
    - description: Overcurrent latency 15s, normal current latency 20s, clear uplink alert "enable"
      input:
        fPort: 17
        bytes: [10, 0, 15, 0, 20, 1]
      output:
        data:
          overCurrentLatency: 15
          normalCurrentLatency: 20
          uplinkAlertClear: 'enable'

# Downlink encoder encodes JSON object into a binary data downlink (optional)
downlinkEncoder:
  fileName: lrs2m001-4p3p.js
  examples:
    - description: Get firmware version
      input:
        data:
          cmd: getFirmwareVersion
      output:
        fPort: 20
        bytes: [0]
    - description: Get power meter settings
      input:
        data:
          cmd: getDeviceSettings
      output:
        fPort: 21
        bytes: [10, 0]
    - description: Get power meter settings
      input:
        data:
          cmd: getLatencySettings
      output:
        fPort: 21
        bytes: [10, 1]
    - description: Set power meter settings
      input:
        data:
          cmd: setDeviceSettings
          dataUploadInterval: 30
          underVoltageLimit: 205
          overVoltageLimit: 235
          overCurrentLimit: 300
      output:
        fPort: 22
        bytes: [10, 0, 30, 0, 205, 0, 235, 1, 44, 1]
    - description: Set latency settings
      input:
        data:
          cmd: setLatencySettings
          overCurrentLatency: 20
          normalCurrentLatency: 30
          uplinkAlertClear: 'enable'
      output:
        fPort: 23
        bytes: [10, 0, 20, 0, 30, 1]
