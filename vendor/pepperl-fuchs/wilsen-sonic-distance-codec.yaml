# Uplink decoder decodes binary data uplink into a JSON object (optional)
# For documentation on writing encoders and decoders, see: https://thethingsstack.io/integrations/payload-formatters/javascript/
uplinkDecoder:
  fileName: wilsen.js
  # Examples (optional)
  examples:
    - description: Payload 1 contains proximity in mm, amplitude, battery status and temperature
      input:
        fPort: 1
        bytes: [4, 11, 2, 6, 185, 3, 11, 7, 255, 6, 2, 1, 65, 185, 153, 154, 3, 81, 1, 36]
      output:
        data:
          amplitude: 255
          battery_vol: 3.6
          payload: '040B0206B9030B07FF06020141B9999A03510124'
          proxx_mm: 1721
          temp: 23.2
        errors: []
        warnings: []
    - description: Payload 2 contains proximity in mm, amplitude, battery status, geo location and temperature
      input:
        fPort: 1
        bytes: [4, 11, 2, 6, 185, 3, 11, 7, 255, 6, 2, 1, 65, 185, 153, 154, 3, 81, 1, 36, 6, 80, 1, 2, 244, 0, 111, 6, 80, 2, 0, 129, 51, 109]
      output:
        data:
          amplitude: 255
          battery_vol: 3.6
          latitude: 49.545327
          longitude: 8.467309
          payload: '040B0206B9030B07FF06020141B9999A0351012406500102F4006F0650020081336D'
          proxx_mm: 1721
          temp: 23.2
        errors: []
        warnings: []
    - description: Payload 3 contains serial number, battery status and counter of LoRa transmission, GPS position determination and ultra sonic measurments
      input:
        fPort: 1
        bytes: [16, 42, 37, 52, 56, 48, 48, 48, 48, 48, 48, 54, 51, 48, 54, 56, 50, 4, 49, 1, 2, 192, 4, 49, 2, 0, 0, 6, 49, 3, 0, 0, 1, 115, 3, 81, 1, 36]
      output:
        data:
          battery_vol: 3.6
          gps_count: 0
          lora_count: 704
          payload: '102A25343830303030303036333036383204310102C004310200000631030000017303510124'
          serial_nr: '48000000630682'
          us_sensor_count: 371
        errors: []
        warnings: []
# Downlink encoder encodes JSON object into a binary data downlink (optional)
# downlinkEncoder:
#   fileName: wilsen.js
#   examples:
#     - description: Turn off BLE advertising
#       input:
#         data:
#           led: green
#       output:
#         bytes: [1]
#         fPort: 2
#     - description: Invalid color
#       input:
#         data:
#           led: blue
#       output:
#         errors:
#           - invalid LED color

# Downlink decoder decodes the encoded downlink message (optional, must be symmetric with downlinkEncoder)
# downlinkDecoder:
#   fileName: wilsen.js
#   examples:
#     - description: Turn green
#       input:
#         fPort: 2
#         bytes: [1]
#       output:
#         data:
#           led: green
