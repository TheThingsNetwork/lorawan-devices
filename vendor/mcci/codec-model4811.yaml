# Uplink decoder decodes binary data uplink into a JSON object (optional)
# For documentation on writing encoders and decoders, see: https://thethingsstack.io/integrations/payload-formatters/javascript/
uplinkDecoder:
  fileName: codec-model4811.js
  # Examples (optional)
  examples:
    - description: Sensor report format 0x19
      input:
        fPort: 1
        bytes: [0x19, 0x1B, 0x35, 0x34, 0x0E, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x01, 0x61, 0x42, 0x92, 0x92, 0x89]
      output:
        data: { 'ModbusError': 0, 'boot': 14, 'energySourced': 35300, 'energyUsed': 11800, 'mainDemand': 73.28620147705078, 'vBat': 3.3251953125 }
    - description: Sensor report format 0x19, very low demand
      input:
        fPort: 1
        bytes: [0x19, 0x1B, 0x35, 0x34, 0x0E, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x01, 0x61, 0x00, 0x00, 0x00, 0x01]
      output:
        data: { 'ModbusError': 0, 'boot': 14, 'energySourced': 35300, 'energyUsed': 11800, 'mainDemand': 1.401298464324817e-45, 'vBat': 3.3251953125 }
# Downlink encoder encodes JSON object into a binary data downlink (optional)
## downlinkEncoder:
##   fileName: codec.js
##   # Examples (optional)
##   examples:
##     - description: Turn green
##       input:
##         data:
##           led: green
##       output:
##         bytes: [1]
##         fPort: 2
## # Downlink decoder decodes the encoded downlink message (optional, must be symmetric with downlinkEncoder)
## downlinkDecoder:
##   fileName: codec.js
##   # Examples (optional)
##   examples:
##     - description: Turn green
##       input:
##         fPort: 2
##         bytes: [1]
##       output:
##         data:
##           led: green
